#include "common.fxh"

cbuffer cbConstants
{
    Constants g_Constants;
}

struct PSOutput
{
    float4 Color : SV_TARGET;
};

void main(in PSInput   PSIn,
          out PSOutput PSOut)
{
    float4 Color;
    Color.rgb = ComputeLighting(PSIn.Color.rgb, PSIn.Normal, g_Constants.LightDir.xyz);
    if (PSIn.Color.a < 0.0)
    {
        // Opaque
        Color.a = 1.0;
    }
    else
    {
        // Transparent
        Color.a = lerp(g_Constants.MinOpacity, g_Constants.MaxOpacity, PSIn.Color.a);
        Color.rgb *= Color.a;
    }
    
#if CONVERT_PS_OUTPUT_TO_GAMMA
    // Use fast approximation for gamma correction.
    Color.rgb = pow(Color.rgb, float3(1.0 / 2.2, 1.0 / 2.2, 1.0 / 2.2));
#endif
    PSOut.Color = Color;
}
