name: Linux build

on: [push, pull_request]

jobs:
  precheks:
    name:    Linux -> Pre-checks
    runs-on: ubuntu-24.04

    steps:
    - name: Clone DiligentCore
      uses: actions/checkout@v4
      with:
        repository: DiligentGraphics/DiligentCore
        path:       DiligentCore

    - name: Clone DiligentSamples
      uses: actions/checkout@v4
      with:
        path: DiligentSamples

    - name: Format validation
      shell: bash
      working-directory: ${{github.workspace}}/DiligentSamples/BuildTools/FormatValidation
      run: ./validate_format_linux.sh

    - name: Codespell
      uses: codespell-project/actions-codespell@master
      with:
        check_filenames: true
        ignore_words_file: ./DiligentSamples/.github/.codespellignore
        skip: ./DiligentSamples/.git,./DiligentSamples/ThirdParty,./DiligentSamples/Samples/Asteroids/SDK,*.gltf
        path: ./DiligentSamples


  build:
    needs:   precheks
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        name:       ["GCC", "Clang"]
        build_type: ["Debug", "Release"]
        cmake_args: [""]

        include:
          - name:            "GCC"
            cmake_generator: "Unix Makefiles"
            cc:              "gcc-14"
            cxx:             "g++-14"

          - name:            "Clang"
            cmake_generator: "Ninja"
            cc:              "clang-18"
            cxx:             "clang++-18"

    name: Linux -> ${{ matrix.name }}-x64, ${{ matrix.build_type }}

    steps:
    - name: Checkout
      uses: DiligentGraphics/github-action/checkout@v7

    - name: Set up build environment
      if:   success()
      uses: DiligentGraphics/github-action/setup-build-env@v7
      with:
        platform:        Linux
        cmake-generator: ${{ matrix.cmake_generator }}

    - name: Configure CMake
      if:   success()
      uses: DiligentGraphics/github-action/configure-cmake@v7
      with:
        cc:         ${{ matrix.cc }}
        cxx:        ${{ matrix.cxx }}
        generator:  ${{ matrix.cmake_generator }}
        build-type: ${{ matrix.build_type }}
        cmake-args: ${{ matrix.cmake_args }}

    - name: Build
      id:   build
      if:   success()
      uses: DiligentGraphics/github-action/build@v7

    - name: Sample Tests Vk
      if:   success()
      uses: DiligentGraphics/github-action/run-sample-tests@v7
      with:
        mode:              "vk_sw"
        golden-image-mode: "compare_update"

    - name: Sample Tests Vk Compatibility
      if:   success()
      uses: DiligentGraphics/github-action/run-sample-tests@v7
      with:
        mode:              "vk_sw"
        golden-image-mode: "compare"
        vk-compatibility: true

    - name: Sample Tests GL
      if:    ${{ success() || failure() && steps.build.outcome == 'success' }}
      uses: DiligentGraphics/github-action/run-sample-tests@v7
      with:
        mode:              "gl"
        golden-image-mode: "compare_update"

    - name: Sample Tests GL with Non-Separable Programs
      if:    ${{ success() || failure() && steps.build.outcome == 'success' }}
      uses: DiligentGraphics/github-action/run-sample-tests@v7
      with:
        mode:                "gl"
        golden-image-mode:   "compare"
        non-separable-progs: "true"


    - name: Upload Golden Images
      uses: actions/upload-artifact@v4
      # NB: it is essential to include failure() to override the default status check of success()
      #     that is automatically applied to if conditions that don't contain a status check function.
      if: ${{ success() || failure() && steps.build.outcome == 'success' }}
      with:
        name: GoldenImages-${{ matrix.name }}-${{ matrix.toolset }}-${{ matrix.build_type }}
        path: |
          ${{github.workspace}}/DiligentTestData/GoldenImages
        retention-days: 90
